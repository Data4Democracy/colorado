{
    "collab_server" : "",
    "contents" : "# import .xls\n# ==============================================================================\nlibrary(readxl)\nlibrary(plyr)\nlibrary(data.table)\n\n# https://stackoverflow.com/questions/4948361/how-do-i-save-warnings-and-errors-as-output-from-a-function\n# Martin Morgan\nfactory <- function(fun)\n    function(...) {\n        warn <- err <- NULL\n        res <- withCallingHandlers(\n            tryCatch(fun(...), error=function(e) {\n                err <<- conditionMessage(e)\n                NULL\n            }), warning=function(w) {\n                warn <<- append(warn, conditionMessage(w))\n                invokeRestart(\"muffleWarning\")\n            })\n        list(res, warn=warn, err=err)\n    }\n\n.has <- function(x, what)\n    !sapply(lapply(x, \"[[\", what), is.null)\nhasWarning <- function(x) .has(x, \"warn\")\nhasError <- function(x) .has(x, \"err\")\nisClean <- function(x) !(hasError(x) | hasWarning(x))\nvalue <- function(x) sapply(x, \"[[\", 1)\ncleanv <- function(x) sapply(x[isClean(x)], \"[[\", 1)\n\n\nparseStatCodeText <- function(warning_text_entry) {\n    split_up <- unlist(strsplit(warning_text_entry, \"date in A| / |Code: |'\"))\n    split_up[c(2, 5)]\n}\n\nparsePrmtTypeText <- function(warning_text_entry) {\n    split_up <- unlist(strsplit(warning_text_entry, \"Permit Type: \"))\n    split_up[2]\n}\n\n# factory warning for read_xls\nread_xls_warning <- factory(read_xls)\n\nreadCODxls <- function(file_name) {\n    \n    # function to read .xls\n    attempted_read <- \n        read_xls_warning(file_name, skip = 2, \n                 col_types = c(\n                     `Date Issued` = \"date\",\n                     `Permit Type` = \"text\", \"skip\",\n                     `Permit #` = \"text\", \"skip\", \"skip\",\n                     `Address` = \"text\", \"skip\",\n                     `Location` = \"text\", \"skip\", \"skip\",\n                     `Class` = \"text\",\n                     `Units` = \"numeric\", \"skip\", \"skip\",\n                     `Valuation` = \"guess\",\n                     `Permit Fee` = \"numeric\", \"skip\",\n                     `Owner's Name` = \"text\", \"skip\",\n                     `Contractor's Name` = \"text\", \"skip\"))\n    \n    table <- as.data.table(attempted_read[[1]])\n    table[ , \"Stat Code\" := \"\"]\n    table[ , \"Permit Type\" := \"\"]\n    \n    # fix stat codes\n    stat_code_text <- attempted_read$warn[ grep(\"Stat Code\", attempted_read$warn) ]\n    \n    row_and_codes <- ldply(stat_code_text, parseStatCodeText)\n    row_and_codes$V1 <- as.numeric(row_and_codes$V1) - 2\n    row_and_codes <- rbind(row_and_codes,\n                           list(nrow(table), \"\"))\n    \n    sapply(1:(nrow(row_and_codes) - 1), function (i) {\n        table[ seq(row_and_codes[i, 1], row_and_codes[i + 1, 1]),\n               `Stat Code` := row_and_codes[i, 2] ]\n    })\n    \n    # fix permit types\n    permit_type_index <- grep(\"Permit Type: \", table$X__1)\n    row_and_codes_permit <- ldply(\n        table$X__1[permit_type_index], parsePrmtTypeText)\n    row_and_codes_permit$permit_type_index <- permit_type_index\n    row_and_codes_permit <- rbind(row_and_codes_permit, list(\"\", nrow(table)))\n    \n    sapply(1:(nrow(row_and_codes_permit) - 1), function (i) {\n        table[ seq(row_and_codes_permit[i, 2], row_and_codes_permit[i + 1, 2]),\n               `Permit Type` := row_and_codes_permit[i, 1] ]\n    })\n    \n    \n    # final cleaning\n    table <- table[!is.na(`Date Issued`) & !is.na(`Permit #`), ]\n    table[ , X__1 := NULL]\n    \n    print(paste(\"read\", file_name, \"successfully!\"))\n    assign(x = gsub(\"\\\\.\\\\/data\\\\/|\\\\.xls\", \"\", file_name), value = table, envir = .GlobalEnv)\n}\n\n\n\n\n# single case trbleshoot\n# read_xls_warning(xls_filepath[13])\n# readCODxls(xls_filepath[13])\n\nxls_filepath <- list.files(\"./data\", pattern = \"*.xls\", full.names = T)\nsapply(xls_filepath, readCODxls)\n\npermit_dts <- ls(pattern = \"Permits*\")\ntext = paste0(\"table <- rbindlist(list(`\", paste(permit_dts, collapse = \"`, `\"), \"`))\")\nparse(text = paste0(\"table <- rbindlist(list(`\", paste(permit_dts, collapse = \"`, `\"), \"`))\"))\neval(parse(text = paste0(\"table <- rbindlist(list(`\", paste(permit_dts, collapse = \"`, `\"), \"`))\")))\neval(parse(text = paste0(\"rm(`\", paste(permit_dts, collapse = \"`, `\"), \"`)\")))\n\n# table[ , file_name := gsub(\"\\\\.\\\\/data\\\\/\", \"\", file_name)]\ntable[ , \"Stat Code\"]\n\ntable[ , `Permit #` := gsub(\"\\\\*failed to decode utf16\\\\*\", \"\", `Permit #`)]\n\nsetorder(table, \"Date Issued\")\nwrite.csv(table, file = \"./output/CityOfDenverHousingPermits_XLStoCSV.csv\", row.names = F)\n",
    "created" : 1498511477433.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2383947467",
    "id" : "CB3CAE96",
    "lastKnownWriteTime" : 1498238641,
    "last_content_update" : 1498238641,
    "path" : "~/PROJECTS/D4D/colorado/denver_teardowns/01_load_xls_to_csv_R.r",
    "project_path" : "01_load_xls_to_csv_R.r",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}